# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:
  - build
  - test

image:
  name: yyz-gitlab.local.tenstorrent.com:5005/tenstorrent/infra/devel-special-pipeline
  entrypoint: [""]

variables:
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

build-WH:     
  stage: build
  tags:
    - 8-core
  script:
    - echo "Compiling the code..."
    - make build ARCH_NAME=wormhole_b0 -j$(nproc)
    - echo "Compile complete."

build-GS:      
  stage: build
  tags:
    - 8-core
  script:
    - echo "Compiling the code..."
    - make build ARCH_NAME=grayskull -j$(nproc) 
    - echo "Compile complete."

build-test-WH:
  stage: build
  dependencies:
    - build-WH
  tags:
    - 8-core
  script:
    - echo "Compiling tests ..."
    - make test ARCH_NAME=wormhole_b0 -j$(nproc)
    - echo "Compile tests complete."    
  artifacts:
    paths:
      - build/*

build-test-GS:
  stage: build
  dependencies:
    - build-GS
  tags:
    - 8-core
  script:
    - echo "Compiling tests ..."
    - make test ARCH_NAME=grayskull -j$(nproc)
    - echo "Compile tests complete."        

silicon-test-WH:
  stage: test
  dependencies:
    - build-test-WH
  tags:
    - 8-core # TODO need to switch to the tag for silicon runners
  script:
    - echo "Running silicon tests ..."
    - ./build/tests/device_unit_tests   # --gtest_filter=SiliconDriverWH.*

