name: Build and run Tests

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      arch:
        required: true
        description: 'The architecture to build for'
        type: choice
        options:
          - grayskull
          - wormhole_b0
          - blackhole

env:
  BUILD_OUTPUT_DIR: ${{ github.workspace }}/build
  BUILD_ARTEFACT_NAME: umd_tests

jobs:
  build:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        build: [
          {runs-on: ubuntu-22.04, docker_image: tt-umd-ci-ubuntu-22.04},
          {runs-on: ubuntu-20.04, docker_image: tt-umd-ci-ubuntu-20.04},
        ]

    name: Build umd_tests for ${{ inputs.arch }} on ${{ matrix.build.runs-on }}
    runs-on: ${{ matrix.build.runs-on }}
    container:
      image: ghcr.io/${{ github.repository }}/${{ matrix.build.docker_image }}:latest
      options: --user root

    env:
      ARCH_NAME: ${{ inputs.arch }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build UMD
      run: |
        echo "Compiling the code..."
        cmake -B ${{ env.BUILD_OUTPUT_DIR }} -G Ninja
        cmake --build ${{ env.BUILD_OUTPUT_DIR }} --target ${{ env.BUILD_ARTEFACT_NAME }}
        echo "Compile complete."

    # This is needed to preserve file permissions
    # https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
    - name: 'Tar needed directories'
      shell: bash
      # working-directory: ${{ env.INSTALL_OUTPUT_DIR }}
      run: tar cvf artifact.tar ${{ env.BUILD_OUTPUT_DIR }}/test ${{ github.workspace }}/device/bin/silicon

    - name: Upload build artifacts folder to archive
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ matrix.build.name }}
        path: artifact.tar


  # test:
  #   timeout-minutes: 30
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       test: [
  #         {name: ubuntu-22.04, machine: ?},
  #         {name: ubuntu-20.04, machine: ?},
  #       ]
  #   runs-on: ${{ matrix.test.machine }}
  #   needs: build

  #   container:
  #     image: ghcr.io/${{ github.repository }}/tt-metalium/${{ matrix.test.name }}:latest
  #     options: --user root
  #     volumes:
  #       - /dev/hugepages:/dev/hugepages
  #       - /dev/hugepages-1G:/dev/hugepages-1G

  #   env:
  #     ARCH_NAME: ${{ inputs.arch }}

  #   steps:

  #   - name: Set reusable strings
  #     id: strings
  #     shell: bash
  #     run: |
  #       echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
  #       echo "build-output-dir=$(pwd)/build" >> "$GITHUB_OUTPUT"
  #       echo "install-output-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"

  #   - name: Use build artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: install-artifacts-${{ matrix.build.name }}
  #       path: ${{ env.INSTALL_OUTPUT_DIR }}

  #   # This is needed to preserve file permissions
  #   # https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
  #   - name: 'Untar install directory'
  #     shell: bash
  #     working-directory: ${{ env.INSTALL_OUTPUT_DIR }}
  #     run: tar xvf artifact.tar

  #   - name: Run UMD unit tests
  #     timeout-minutes: ${{ inputs.timeout }}
  #     run: build/test/umd/${{ inputs.arch }}/unit_tests

