name: Build Source

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      arch:
        required: true
        description: 'The architecture to build for'
        type: choice
        options:
          - grayskull
          - wormhole_b0
          - blackhole

jobs:
  build:

    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        build: [
          {runs-on: ubuntu-22.04, docker_image: tt-umd-ci-ubuntu-22.04},
          {runs-on: ubuntu-20.04, docker_image: tt-umd-ci-ubuntu-20.04},
        ]

    name: Build umd_device for ${{ inputs.arch }} architecture on machine ${{ matrix.build.runs-on }}
    runs-on: ${{ matrix.build.runs-on }}
    container:
      image: ghcr.io/${{ github.repository }}/${{ matrix.build.docker_image }}:latest
      options: --user root

    env:
      ARCH_NAME: ${{ inputs.arch }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # - name: Set up environment
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install -y build-essential libyaml-cpp-dev libhwloc-dev libgtest-dev libboost-dev

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "work-dir=$(pwd)" >> "$GITHUB_OUTPUT"
        echo "build-output-dir=$(pwd)/build" >> "$GITHUB_OUTPUT"
        echo "install-output-dir=$(pwd)/install" >> "$GITHUB_OUTPUT"

    - name: Build UMD
      run: |
        echo "Compiling the code..."
        cmake -B ${{ steps.strings.outputs.build-output-dir }} -G Ninja
        cmake --build ${{ steps.strings.outputs.build-output-dir }} --target umd_device
        echo "Compile complete."
    
    - name: Install UMD
      run: |
        echo "Installing the code..."
        cmake --install ${{ steps.strings.outputs.build-output-dir }} --component umd_device --prefix ${{ steps.strings.outputs.install-output-dir }}
        echo "Install complete."

    # This is needed to preserve file permissions
    # https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
    - name: 'Tar install directory'
      shell: bash
      working-directory: ${{ steps.strings.outputs.install-output-dir }}
      run: tar cvf artifact.tar .

    - name: Upload install folder to archive
      uses: actions/upload-artifact@v4
      with:
        name: install-artifacts-${{ matrix.build.name }}
        path: ${{ steps.strings.outputs.install-output-dir }}/artifact.tar
